{"ast":null,"code":"var _jsxFileName = \"/Users/yinyahui/Desktop/weblearn/juejin/react-antd-manage/react-antd-manage/src/pages/home/components/Edit.jsx\";\n\n/**\n * @description 编辑\n */\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport BaseFormUI from '@/components/BaseFormUI';\n\nconst Edit = _ref => {\n  let { ...props\n  } = _ref;\n  const {\n    visible,\n    data = {},\n    onCancel\n  } = props;\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formRef, setFormRef] = useState({});\n  /**\n   * 操作-关闭弹框\n   * @param {string} type 要关闭的弹框key值\n   * @param {boolean} refresh 弹窗关闭后是否刷新列表\n   * @return {void} 无\n   */\n\n  const handleCancel = refresh => {\n    setConfirmLoading(false);\n    formRef.current.resetFields();\n    onCancel && onCancel(refresh);\n  };\n  /**\n   * 确定操作\n   */\n\n\n  const handleOk = () => {\n    formRef.current.submit();\n  };\n\n  useEffect(() => {\n    if (visible) {//\n    }\n  }, [visible]);\n  /**\n   * 设置表单的ref\n   */\n\n  const getFormRef = formRef => {\n    setFormRef(formRef);\n  };\n  /**\n   * 回调函数\n   */\n\n\n  const callback = value => {\n    console.log('value', value);\n  }; // 列表\n\n\n  const list = [{\n    fieldtype: 'input',\n    label: '姓名',\n    key: 'name'\n  }, {\n    fieldtype: 'input',\n    label: '地址',\n    key: 'address'\n  }, {\n    fieldtype: 'select',\n    label: '颜色',\n    key: 'color',\n    list: [{\n      id: 1,\n      name: '黑色'\n    }, {\n      id: 2,\n      name: '白色'\n    }, {\n      id: 99,\n      name: '其他'\n    }],\n    option: {},\n    textArea: {\n      code: 99,\n      label: '其他颜色',\n      key: 'otherColor',\n      option: {}\n    }\n  }];\n  const config = {\n    data: { ...data,\n      initFieldsValueFlag: true\n    },\n    list: list,\n    getFormRef: getFormRef,\n    callback: callback\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"\\u7F16\\u8F91\",\n    visible: visible,\n    confirmLoading: confirmLoading,\n    onOk: () => handleOk(),\n    onCancel: () => handleCancel(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BaseFormUI, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Edit;","map":{"version":3,"names":["React","useState","useEffect","Modal","BaseFormUI","Edit","props","visible","data","onCancel","confirmLoading","setConfirmLoading","formRef","setFormRef","handleCancel","refresh","current","resetFields","handleOk","submit","getFormRef","callback","value","console","log","list","fieldtype","label","key","id","name","option","textArea","code","config","initFieldsValueFlag"],"sources":["/Users/yinyahui/Desktop/weblearn/juejin/react-antd-manage/react-antd-manage/src/pages/home/components/Edit.jsx"],"sourcesContent":["/**\n * @description 编辑\n */\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport BaseFormUI from '@/components/BaseFormUI';\n\nconst Edit = ({ ...props }) => {\n  const { visible, data = {}, onCancel } = props;\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formRef, setFormRef] = useState({});\n\n  /**\n   * 操作-关闭弹框\n   * @param {string} type 要关闭的弹框key值\n   * @param {boolean} refresh 弹窗关闭后是否刷新列表\n   * @return {void} 无\n   */\n  const handleCancel = refresh => {\n    setConfirmLoading(false);\n    formRef.current.resetFields();\n    onCancel && onCancel(refresh);\n  };\n\n  /**\n   * 确定操作\n   */\n  const handleOk = () => {\n    formRef.current.submit();\n  };\n\n  useEffect(() => {\n    if (visible) {\n      //\n    }\n  }, [visible]);\n\n  /**\n   * 设置表单的ref\n   */\n  const getFormRef = formRef => {\n    setFormRef(formRef);\n  };\n\n  /**\n   * 回调函数\n   */\n  const callback = value => {\n    console.log('value', value);\n  };\n\n  // 列表\n  const list = [\n    {\n      fieldtype: 'input',\n      label: '姓名',\n      key: 'name',\n    },\n    {\n      fieldtype: 'input',\n      label: '地址',\n      key: 'address',\n    },\n    {\n      fieldtype: 'select',\n      label: '颜色',\n      key: 'color',\n      list: [\n        {\n          id: 1,\n          name: '黑色',\n        },\n        {\n          id: 2,\n          name: '白色',\n        },\n        {\n          id: 99,\n          name: '其他',\n        },\n      ],\n      option: {},\n      textArea: {\n        code: 99,\n        label: '其他颜色',\n        key: 'otherColor',\n        option: {},\n      },\n    },\n  ];\n\n  const config = {\n    data: {\n      ...data,\n      initFieldsValueFlag: true,\n    },\n    list: list,\n    getFormRef: getFormRef,\n    callback: callback,\n  };\n\n  return (\n    <Modal title='编辑' visible={visible} confirmLoading={confirmLoading} onOk={() => handleOk()} onCancel={() => handleCancel(false)}>\n      <BaseFormUI {...config} />\n    </Modal>\n  );\n};\n\nexport default Edit;\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,IAAI,GAAG,QAAkB;EAAA,IAAjB,EAAE,GAAGC;EAAL,CAAiB;EAC7B,MAAM;IAAEC,OAAF;IAAWC,IAAI,GAAG,EAAlB;IAAsBC;EAAtB,IAAmCH,KAAzC;EACA,MAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;EAEA;AACF;AACA;AACA;AACA;AACA;;EACE,MAAMa,YAAY,GAAGC,OAAO,IAAI;IAC9BJ,iBAAiB,CAAC,KAAD,CAAjB;IACAC,OAAO,CAACI,OAAR,CAAgBC,WAAhB;IACAR,QAAQ,IAAIA,QAAQ,CAACM,OAAD,CAApB;EACD,CAJD;EAMA;AACF;AACA;;;EACE,MAAMG,QAAQ,GAAG,MAAM;IACrBN,OAAO,CAACI,OAAR,CAAgBG,MAAhB;EACD,CAFD;;EAIAjB,SAAS,CAAC,MAAM;IACd,IAAIK,OAAJ,EAAa,CACX;IACD;EACF,CAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;EAMA;AACF;AACA;;EACE,MAAMa,UAAU,GAAGR,OAAO,IAAI;IAC5BC,UAAU,CAACD,OAAD,CAAV;EACD,CAFD;EAIA;AACF;AACA;;;EACE,MAAMS,QAAQ,GAAGC,KAAK,IAAI;IACxBC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;EACD,CAFD,CAxC6B,CA4C7B;;;EACA,MAAMG,IAAI,GAAG,CACX;IACEC,SAAS,EAAE,OADb;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE;EAHP,CADW,EAMX;IACEF,SAAS,EAAE,OADb;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE;EAHP,CANW,EAWX;IACEF,SAAS,EAAE,QADb;IAEEC,KAAK,EAAE,IAFT;IAGEC,GAAG,EAAE,OAHP;IAIEH,IAAI,EAAE,CACJ;MACEI,EAAE,EAAE,CADN;MAEEC,IAAI,EAAE;IAFR,CADI,EAKJ;MACED,EAAE,EAAE,CADN;MAEEC,IAAI,EAAE;IAFR,CALI,EASJ;MACED,EAAE,EAAE,EADN;MAEEC,IAAI,EAAE;IAFR,CATI,CAJR;IAkBEC,MAAM,EAAE,EAlBV;IAmBEC,QAAQ,EAAE;MACRC,IAAI,EAAE,EADE;MAERN,KAAK,EAAE,MAFC;MAGRC,GAAG,EAAE,YAHG;MAIRG,MAAM,EAAE;IAJA;EAnBZ,CAXW,CAAb;EAuCA,MAAMG,MAAM,GAAG;IACb1B,IAAI,EAAE,EACJ,GAAGA,IADC;MAEJ2B,mBAAmB,EAAE;IAFjB,CADO;IAKbV,IAAI,EAAEA,IALO;IAMbL,UAAU,EAAEA,UANC;IAObC,QAAQ,EAAEA;EAPG,CAAf;EAUA,oBACE,oBAAC,KAAD;IAAO,KAAK,EAAC,cAAb;IAAkB,OAAO,EAAEd,OAA3B;IAAoC,cAAc,EAAEG,cAApD;IAAoE,IAAI,EAAE,MAAMQ,QAAQ,EAAxF;IAA4F,QAAQ,EAAE,MAAMJ,YAAY,CAAC,KAAD,CAAxH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD,oBAAgBoB,MAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,CADF;AAKD,CAnGD;;AAqGA,eAAe7B,IAAf"},"metadata":{},"sourceType":"module"}