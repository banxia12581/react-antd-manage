{"ast":null,"code":"var _jsxFileName = \"/Users/yinyahui/Desktop/weblearn/juejin/react-antd-manage/react-antd-manage/src/components/BaseFormUI/index.jsx\",\n    _this = this;\n\n/**\n * @description 公共业务组件-基础表单布局\n */\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport classnames from 'classnames';\nimport { Form, Select, Input, DatePicker, Checkbox, InputNumber, Radio, Space } from 'antd';\n\nconst BaseFormUI = _ref => {\n  let { ...props\n  } = _ref;\n  const {\n    data = {},\n    callback,\n    getFormRef\n  } = props;\n  const formRef = useRef({});\n  /**\n   * 初始化list数据\n   */\n\n  const initListData = function (item) {\n    let messagePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    // 是否可以操作\n    item.disabled = item.disabled ? item.disabled : false; // 是否必填项\n\n    item.required = item.required === false ? false : true; // 是否必填项\n\n    item.rules = item.rules ? item.rules : [{\n      required: item.required,\n      message: `请${messagePrefix}${item.label}`\n    }];\n    return item;\n  };\n\n  let listInit = _.cloneDeep(props.list);\n\n  listInit.map(item => {\n    // 是否可以操作\n    item.disabled = item.disabled ? item.disabled : false; // 是否必填项\n\n    item.required = item.required === false ? false : true;\n    let messagePrefix = '选择';\n\n    if (item.key === 'input' || item.key === 'inputNumber' || item.key === 'textArea') {\n      messagePrefix = '输入';\n    }\n\n    item = initListData(item, messagePrefix); // 是否必填项\n\n    item.rules = item.rules ? item.rules : [{\n      required: item.required,\n      message: `请${messagePrefix}${item.label}`\n    }];\n    item.textArea = item.textArea ? item.textArea : {}; // 是否可以操作\n\n    item.textArea.disabled = item.textArea.disabled ? item.textArea.disabled : false; // 是否必填项\n\n    item.textArea.required = item.textArea.required === false ? false : true;\n    item.textArea.rules = item.textArea.rules ? item.textArea.rules : [{\n      required: item.textArea.required\n    }];\n  });\n  let [list, setList] = useState(listInit);\n  let layout = props.layout ? props.layout : {\n    labelCol: 6,\n    wrapperCol: 18\n  };\n  let layoutInit = {\n    labelCol: {\n      span: layout.labelCol\n    },\n    wrapperCol: {\n      span: layout.wrapperCol\n    }\n  };\n  useEffect(() => {\n    if (data.initFieldsValueFlag) {\n      formRef.current.setFieldsValue(data);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (formRef) {\n      getFormRef && getFormRef(formRef);\n    }\n  }, []);\n  /**\n   * 输入框类型\n   * @param {object} item 表单项\n   */\n\n  const inputContent = item => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: `请输入${item.label}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })));\n  };\n  /**\n   * 数字类型输入框类型\n   * @param {object} item 表单项\n   */\n\n\n  const inputNumberContent = item => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      className: classnames({\n        required: item.required\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      noStyle: true,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      style: {\n        width: '50%'\n      },\n      step: item.step,\n      precision: item.precision,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, item.unit)));\n  };\n  /**\n   * 文本域类型\n   * @param {object} item 表单项\n   * @param {string} type 文本域类型 other-其他类型下选择其他时展示\n   */\n\n\n  const textAreaContent = function (item) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'other';\n    let areaLayout = {};\n    let label = item.label;\n\n    if (type === 'other') {\n      areaLayout = {\n        wrapperCol: {\n          offset: layout.labelCol,\n          span: layout.wrapperCol\n        }\n      };\n      label = null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, areaLayout, {\n      label: label,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input.TextArea, {\n      maxLength: 500,\n      rows: 3,\n      placeholder: `请输入${item.label}`,\n      allowClear: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    })));\n  };\n  /**\n   * 多选操作\n   * @param {any} id 选择的id\n   * @param {any} item 选择的item\n   * @param {number} index 选择的表单项的索引\n   * @return {void} 无\n   */\n\n\n  const checkboxChange = (id, item, index) => {\n    let formListInit = _.cloneDeep(list);\n\n    let formItem = formListInit[index];\n    formItem.option = item;\n    setList(formListInit);\n  };\n  /**\n   * 多选框类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n\n\n  const checkboxContent = (item, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n      onChange: (id, obj) => checkboxChange(id, obj, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, item.list.length !== 0 ? item.list.map(listItem => /*#__PURE__*/React.createElement(Checkbox, {\n      key: listItem.id,\n      value: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, listItem.name)) : null)));\n  };\n  /**\n   * 日期类型-可选时间范围\n   * @param {object} item 表单项\n   */\n\n\n  const setDisabledDate = (current, item) => {\n    return current && item.dateDisabledExpression;\n  };\n  /**\n   * 日期类型\n   * @param {object} item 表单项\n   */\n\n\n  const dateContent = item => {\n    const format = item.format ? item.format : 'YYYY-MM-DD HH:mm:ss';\n    const showTime = item.showTime === false ? false : true;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      showTime: showTime,\n      format: format,\n      disabledDate: current => setDisabledDate(current, item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    })));\n  };\n  /**\n   * 下拉选项操作\n   * @param {any} id 选择的id\n   * @param {Object} option 选择的对象\n   * @param {number} index 选择的表单项的索引\n   * @return {void} 无\n   */\n\n\n  const selectChange = (id, option, index) => {\n    let formListInit = _.cloneDeep(list);\n\n    let chooseItem = formListInit[index];\n    if (id === chooseItem.option.value) return false;\n    chooseItem.option = option;\n    console.log(formListInit, 'formListInit');\n    setList([...formListInit]);\n  };\n  /**\n   * 下拉类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n\n\n  const selectContent = (item, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: item.rules,\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: (id, option) => selectChange(id, option, index),\n      placeholder: \"\\u8BF7\\u9009\\u62E9\",\n      allowClear: true,\n      optionFilterProp: \"children\",\n      showSearch: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, item.list.length !== 0 ? item.list.map(listItem => /*#__PURE__*/React.createElement(Select.Option, {\n      key: listItem.id,\n      value: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, listItem.name)) : null)), item.textArea.code && item.option.value === item.textArea.code ? textAreaContent(item.textArea) : null));\n  };\n  /**\n   * 单选项操作\n   */\n\n\n  const radioChange = (e, index) => {\n    const value = e.target.value;\n\n    let formListInit = _.cloneDeep(list);\n\n    let chooseItem = formListInit[index];\n    chooseItem.option.value = value;\n    setList(formListInit);\n  };\n  /**\n   * 单选项类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n\n\n  const radioContent = (item, index) => {\n    let textAreaItem = item.textArea ? item.textArea : {};\n    return /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? item.children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: [{\n        required: item.required,\n        message: `请选择${item.label}`\n      }],\n      disabled: item.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      onChange: e => radioChange(e, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, item.list.length !== 0 ? item.list.map((listItem, listItemIndex) => /*#__PURE__*/React.createElement(Radio, {\n      key: listItemIndex,\n      value: listItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, listItem.name)) : null)), textAreaItem.code && item.option.value === textAreaItem.code ? textAreaContent(textAreaItem) : null));\n  };\n  /**\n   * 纯文本类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n\n\n  const textContent = item => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: item.label,\n      name: item.key,\n      rules: item.rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, item.value));\n  };\n  /**\n   * 提交操作\n   */\n\n\n  const handleSubmit = value => {\n    callback && callback(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, layoutInit, {\n    labelAlign: \"left\",\n    ref: formRef,\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }\n  }), list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, item.fieldtype === 'input' ? inputContent(item) : null, item.fieldtype === 'inputNumber' ? inputNumberContent(item) : null, item.fieldtype === 'date' ? dateContent(item) : null, item.fieldtype === 'select' ? selectContent(item, index) : null, item.fieldtype === 'checkbox' ? checkboxContent(item, index) : null, item.fieldtype === 'radio' ? radioContent(item, index) : null, item.fieldtype === 'textArea' ? textAreaContent(item, '') : null, item.fieldtype === 'text' ? textContent(item) : null);\n  }));\n};\n\nBaseFormUI.propTypes = {\n  callback: PropTypes.func,\n  // 回调函数\n  data: PropTypes.object.isRequired,\n  // 基础数据对象 必传\n  layout: PropTypes.object,\n  // 表单布局\n  list: PropTypes.array,\n  // 表单项数组\n  getFormRef: PropTypes.func // 获取formRef方法\n\n};\nBaseFormUI.defaultProps = {\n  data: {},\n  list: []\n};\nexport default BaseFormUI;","map":{"version":3,"names":["React","Fragment","useEffect","useState","useRef","PropTypes","_","classnames","Form","Select","Input","DatePicker","Checkbox","InputNumber","Radio","Space","BaseFormUI","props","data","callback","getFormRef","formRef","initListData","item","messagePrefix","disabled","required","rules","message","label","listInit","cloneDeep","list","map","key","textArea","setList","layout","labelCol","wrapperCol","layoutInit","span","initFieldsValueFlag","current","setFieldsValue","inputContent","children","inputNumberContent","width","step","precision","unit","textAreaContent","type","areaLayout","offset","checkboxChange","id","index","formListInit","formItem","option","checkboxContent","obj","length","listItem","name","setDisabledDate","dateDisabledExpression","dateContent","format","showTime","selectChange","chooseItem","value","console","log","selectContent","code","radioChange","e","target","radioContent","textAreaItem","listItemIndex","textContent","handleSubmit","fieldtype","propTypes","func","object","isRequired","array","defaultProps"],"sources":["/Users/yinyahui/Desktop/weblearn/juejin/react-antd-manage/react-antd-manage/src/components/BaseFormUI/index.jsx"],"sourcesContent":["/**\n * @description 公共业务组件-基础表单布局\n */\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport classnames from 'classnames';\nimport { Form, Select, Input, DatePicker, Checkbox, InputNumber, Radio, Space } from 'antd';\n\nconst BaseFormUI = ({ ...props }) => {\n  const { data = {}, callback, getFormRef } = props;\n  const formRef = useRef({});\n  /**\n   * 初始化list数据\n   */\n  const initListData = (item, messagePrefix = '') => {\n    // 是否可以操作\n    item.disabled = item.disabled ? item.disabled : false;\n    // 是否必填项\n    item.required = item.required === false ? false : true;\n    // 是否必填项\n    item.rules = item.rules ? item.rules : [{ required: item.required, message: `请${messagePrefix}${item.label}` }];\n    return item;\n  };\n\n  let listInit = _.cloneDeep(props.list);\n  listInit.map(item => {\n    // 是否可以操作\n    item.disabled = item.disabled ? item.disabled : false;\n    // 是否必填项\n    item.required = item.required === false ? false : true;\n    let messagePrefix = '选择';\n    if (item.key === 'input' || item.key === 'inputNumber' || item.key === 'textArea') {\n      messagePrefix = '输入';\n    }\n    item = initListData(item, messagePrefix);\n    // 是否必填项\n    item.rules = item.rules ? item.rules : [{ required: item.required, message: `请${messagePrefix}${item.label}` }];\n    item.textArea = item.textArea ? item.textArea : {};\n    // 是否可以操作\n    item.textArea.disabled = item.textArea.disabled ? item.textArea.disabled : false;\n    // 是否必填项\n    item.textArea.required = item.textArea.required === false ? false : true;\n    item.textArea.rules = item.textArea.rules ? item.textArea.rules : [{ required: item.textArea.required }];\n  });\n  let [list, setList] = useState(listInit);\n  let layout = props.layout\n    ? props.layout\n    : {\n        labelCol: 6,\n        wrapperCol: 18,\n      };\n  let layoutInit = {\n    labelCol: { span: layout.labelCol },\n    wrapperCol: { span: layout.wrapperCol },\n  };\n\n  useEffect(() => {\n    if (data.initFieldsValueFlag) {\n      formRef.current.setFieldsValue(data);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (formRef) {\n      getFormRef && getFormRef(formRef);\n    }\n  }, []);\n\n  /**\n   * 输入框类型\n   * @param {object} item 表单项\n   */\n  const inputContent = item => {\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <Form.Item label={item.label} name={item.key} rules={item.rules} disabled={item.disabled}>\n            <Input placeholder={`请输入${item.label}`} />\n          </Form.Item>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 数字类型输入框类型\n   * @param {object} item 表单项\n   */\n  const inputNumberContent = item => {\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <Form.Item label={item.label} className={classnames({ required: item.required })}>\n            <Form.Item noStyle name={item.key} rules={item.rules} disabled={item.disabled}>\n              <InputNumber style={{ width: '50%' }} step={item.step} precision={item.precision} />\n            </Form.Item>\n            <span className='ml10'>{item.unit}</span>\n          </Form.Item>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 文本域类型\n   * @param {object} item 表单项\n   * @param {string} type 文本域类型 other-其他类型下选择其他时展示\n   */\n  const textAreaContent = (item, type = 'other') => {\n    let areaLayout = {};\n    let label = item.label;\n    if (type === 'other') {\n      areaLayout = { wrapperCol: { offset: layout.labelCol, span: layout.wrapperCol } };\n      label = null;\n    }\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <Form.Item {...areaLayout} label={label} name={item.key} rules={item.rules} disabled={item.disabled}>\n            <Input.TextArea maxLength={500} rows={3} placeholder={`请输入${item.label}`} allowClear />\n          </Form.Item>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 多选操作\n   * @param {any} id 选择的id\n   * @param {any} item 选择的item\n   * @param {number} index 选择的表单项的索引\n   * @return {void} 无\n   */\n  const checkboxChange = (id, item, index) => {\n    let formListInit = _.cloneDeep(list);\n    let formItem = formListInit[index];\n    formItem.option = item;\n    setList(formListInit);\n  };\n\n  /**\n   * 多选框类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n  const checkboxContent = (item, index) => {\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <Form.Item label={item.label} name={item.key} rules={item.rules} disabled={item.disabled}>\n            <Checkbox.Group onChange={(id, obj) => checkboxChange(id, obj, index)}>\n              {item.list.length !== 0\n                ? item.list.map(listItem => (\n                    <Checkbox key={listItem.id} value={listItem.id}>\n                      {listItem.name}\n                    </Checkbox>\n                  ))\n                : null}\n            </Checkbox.Group>\n          </Form.Item>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 日期类型-可选时间范围\n   * @param {object} item 表单项\n   */\n  const setDisabledDate = (current, item) => {\n    return current && item.dateDisabledExpression;\n  };\n\n  /**\n   * 日期类型\n   * @param {object} item 表单项\n   */\n  const dateContent = item => {\n    const format = item.format ? item.format : 'YYYY-MM-DD HH:mm:ss';\n    const showTime = item.showTime === false ? false : true;\n\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <Form.Item label={item.label} name={item.key} rules={item.rules} disabled={item.disabled}>\n            <DatePicker showTime={showTime} format={format} disabledDate={current => setDisabledDate(current, item)} />\n          </Form.Item>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 下拉选项操作\n   * @param {any} id 选择的id\n   * @param {Object} option 选择的对象\n   * @param {number} index 选择的表单项的索引\n   * @return {void} 无\n   */\n  const selectChange = (id, option, index) => {\n    let formListInit = _.cloneDeep(list);\n    let chooseItem = formListInit[index];\n    if (id === chooseItem.option.value) return false;\n    chooseItem.option = option;\n    console.log(formListInit, 'formListInit');\n    setList([...formListInit]);\n  };\n\n  /**\n   * 下拉类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n  const selectContent = (item, index) => {\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <>\n            <Form.Item label={item.label} name={item.key} rules={item.rules} disabled={item.disabled}>\n              <Select onChange={(id, option) => selectChange(id, option, index)} placeholder='请选择' allowClear optionFilterProp='children' showSearch>\n                {item.list.length !== 0\n                  ? item.list.map(listItem => (\n                      <Select.Option key={listItem.id} value={listItem.id}>\n                        {listItem.name}\n                      </Select.Option>\n                    ))\n                  : null}\n              </Select>\n            </Form.Item>\n            {/* 下拉项中有需要文本输入的情况 */}\n            {item.textArea.code && item.option.value === item.textArea.code ? textAreaContent(item.textArea) : null}\n          </>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 单选项操作\n   */\n  const radioChange = (e, index) => {\n    const value = e.target.value;\n    let formListInit = _.cloneDeep(list);\n    let chooseItem = formListInit[index];\n    chooseItem.option.value = value;\n    setList(formListInit);\n  };\n\n  /**\n   * 单选项类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n  const radioContent = (item, index) => {\n    let textAreaItem = item.textArea ? item.textArea : {};\n    return (\n      <>\n        {item.children ? (\n          item.children\n        ) : (\n          <>\n            <Form.Item label={item.label} name={item.key} rules={[{ required: item.required, message: `请选择${item.label}` }]} disabled={item.disabled}>\n              <Radio.Group onChange={e => radioChange(e, index)}>\n                {item.list.length !== 0\n                  ? item.list.map((listItem, listItemIndex) => (\n                      <Radio key={listItemIndex} value={listItem.id}>\n                        {listItem.name}\n                      </Radio>\n                    ))\n                  : null}\n              </Radio.Group>\n            </Form.Item>\n            {/* 下拉项中有需要文本输入的情况 */}\n            {textAreaItem.code && item.option.value === textAreaItem.code ? textAreaContent(textAreaItem) : null}\n          </>\n        )}\n      </>\n    );\n  };\n\n  /**\n   * 纯文本类型\n   * @param {object} item 表单项\n   * @param {number} index 表单项索引值\n   */\n  const textContent = item => {\n    return (\n      <Form.Item label={item.label} name={item.key} rules={item.rules}>\n        <Space>{item.value}</Space>\n      </Form.Item>\n    );\n  };\n\n  /**\n   * 提交操作\n   */\n  const handleSubmit = value => {\n    callback && callback(value);\n  };\n\n  return (\n    <Form {...layoutInit} labelAlign='left' ref={formRef} onFinish={handleSubmit}>\n      {list.map((item, index) => {\n        return (\n          <Fragment key={index}>\n            {item.fieldtype === 'input' ? inputContent(item) : null}\n            {item.fieldtype === 'inputNumber' ? inputNumberContent(item) : null}\n            {item.fieldtype === 'date' ? dateContent(item) : null}\n            {item.fieldtype === 'select' ? selectContent(item, index) : null}\n            {item.fieldtype === 'checkbox' ? checkboxContent(item, index) : null}\n            {item.fieldtype === 'radio' ? radioContent(item, index) : null}\n            {item.fieldtype === 'textArea' ? textAreaContent(item, '') : null}\n            {item.fieldtype === 'text' ? textContent(item) : null}\n          </Fragment>\n        );\n      })}\n    </Form>\n  );\n};\n\nBaseFormUI.propTypes = {\n  callback: PropTypes.func, // 回调函数\n  data: PropTypes.object.isRequired, // 基础数据对象 必传\n  layout: PropTypes.object, // 表单布局\n  list: PropTypes.array, // 表单项数组\n  getFormRef: PropTypes.func, // 获取formRef方法\n};\n\nBaseFormUI.defaultProps = {\n  data: {},\n  list: [],\n};\n\nexport default BaseFormUI;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}