{"ast":null,"code":"/**\n * @description 公共方法\n */\nimport moment from 'moment'; // 获取用户信息\n\nconst getUserInfo = () => {\n  let userInfo = localStorage.getItem('userInfo');\n\n  if (userInfo) {\n    return JSON.parse(userInfo);\n  }\n\n  return null;\n}; // 保存用户信息\n\n\nconst saveUserInfo = userInfo => {\n  if (userInfo) {\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  }\n};\n/**\n * 两个是否可以整除\n * @param {number} num1 除数\n * @param {number} num2 被除数\n * @return {boolean} 是否整除的布尔值\n */\n\n\nconst getNumDivisibleFlag = (num1, num2) => {\n  let flag = false; // 如果除数小于被除数 则表示不可以被整除\n\n  if (num1 > num2 && num1 / num2 > 1) {\n    flag = true;\n  }\n\n  return flag;\n};\n/**\n * 获取倒计时\n * @param {number} num1 除数\n * @param {number} num2 被除数\n * @return {string} 字符串时间\n */\n\n\nconst getCountdown = () => {\n  let nowDate = new Date(); // 获取的2022-06-05的23:59:59的时间戳\n\n  let endTime = moment('2022-06-05').endOf('day').format('x');\n  let timer = null; // 剩余时间 毫秒\n\n  let surplusTime = endTime - nowDate.getTime();\n\n  if (surplusTime <= 0) {\n    clearTimeout(timer);\n    return '活动已结束';\n  } else {\n    // 剩余时间 秒\n    let lsurplusSecond = parseInt(surplusTime / 1000);\n    let day = Math.floor(lsurplusSecond / (60 * 60 * 24));\n    let hour = Math.floor((lsurplusSecond - day * 24 * 60 * 60) / 3600);\n    let minute = Math.floor((lsurplusSecond - day * 24 * 60 * 60 - hour * 3600) / 60);\n    let second = Math.floor(lsurplusSecond / 1000 % 60, 10);\n    timer = setTimeout(getCountdown(), 1000);\n    return `剩余时间：${day}天 ${hour}:${minute}:${second}`;\n  }\n};\n\nexport default {\n  getUserInfo,\n  saveUserInfo,\n  getNumDivisibleFlag,\n  getCountdown\n};","map":{"version":3,"names":["moment","getUserInfo","userInfo","localStorage","getItem","JSON","parse","saveUserInfo","setItem","stringify","getNumDivisibleFlag","num1","num2","flag","getCountdown","nowDate","Date","endTime","endOf","format","timer","surplusTime","getTime","clearTimeout","lsurplusSecond","parseInt","day","Math","floor","hour","minute","second","setTimeout"],"sources":["/Users/yinyahui/Desktop/weblearn/juejin/react-antd-yyy-zongzi/src/utils/util.js"],"sourcesContent":["/**\n * @description 公共方法\n */\nimport moment from 'moment';\n\n// 获取用户信息\nconst getUserInfo = () => {\n  let userInfo = localStorage.getItem('userInfo');\n  if (userInfo) {\n    return JSON.parse(userInfo);\n  }\n  return null;\n};\n\n// 保存用户信息\nconst saveUserInfo = userInfo => {\n  if (userInfo) {\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  }\n};\n\n/**\n * 两个是否可以整除\n * @param {number} num1 除数\n * @param {number} num2 被除数\n * @return {boolean} 是否整除的布尔值\n */\nconst getNumDivisibleFlag = (num1, num2) => {\n  let flag = false;\n  // 如果除数小于被除数 则表示不可以被整除\n  if (num1 > num2 && num1 / num2 > 1) {\n    flag = true;\n  }\n  return flag;\n};\n\n/**\n * 获取倒计时\n * @param {number} num1 除数\n * @param {number} num2 被除数\n * @return {string} 字符串时间\n */\nconst getCountdown = () => {\n  let nowDate = new Date();\n  // 获取的2022-06-05的23:59:59的时间戳\n  let endTime = moment('2022-06-05').endOf('day').format('x');\n  let timer = null;\n  // 剩余时间 毫秒\n  let surplusTime = endTime - nowDate.getTime();\n  if (surplusTime <= 0) {\n    clearTimeout(timer);\n    return '活动已结束';\n  } else {\n    // 剩余时间 秒\n    let lsurplusSecond = parseInt(surplusTime / 1000);\n    let day = Math.floor(lsurplusSecond / (60 * 60 * 24));\n    let hour = Math.floor((lsurplusSecond - day * 24 * 60 * 60) / 3600);\n    let minute = Math.floor((lsurplusSecond - day * 24 * 60 * 60 - hour * 3600) / 60);\n    let second = Math.floor((lsurplusSecond / 1000) % 60, 10);\n    timer = setTimeout(getCountdown(), 1000);\n    return `剩余时间：${day}天 ${hour}:${minute}:${second}`;\n  }\n};\n\nexport default { getUserInfo, saveUserInfo, getNumDivisibleFlag, getCountdown };\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,MAAM;EACxB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;EACA,IAAIF,QAAJ,EAAc;IACZ,OAAOG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAP;EACD;;EACD,OAAO,IAAP;AACD,CAND,C,CAQA;;;AACA,MAAMK,YAAY,GAAGL,QAAQ,IAAI;EAC/B,IAAIA,QAAJ,EAAc;IACZC,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACI,SAAL,CAAeP,QAAf,CAAjC;EACD;AACF,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,mBAAmB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EAC1C,IAAIC,IAAI,GAAG,KAAX,CAD0C,CAE1C;;EACA,IAAIF,IAAI,GAAGC,IAAP,IAAeD,IAAI,GAAGC,IAAP,GAAc,CAAjC,EAAoC;IAClCC,IAAI,GAAG,IAAP;EACD;;EACD,OAAOA,IAAP;AACD,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG,MAAM;EACzB,IAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd,CADyB,CAEzB;;EACA,IAAIC,OAAO,GAAGjB,MAAM,CAAC,YAAD,CAAN,CAAqBkB,KAArB,CAA2B,KAA3B,EAAkCC,MAAlC,CAAyC,GAAzC,CAAd;EACA,IAAIC,KAAK,GAAG,IAAZ,CAJyB,CAKzB;;EACA,IAAIC,WAAW,GAAGJ,OAAO,GAAGF,OAAO,CAACO,OAAR,EAA5B;;EACA,IAAID,WAAW,IAAI,CAAnB,EAAsB;IACpBE,YAAY,CAACH,KAAD,CAAZ;IACA,OAAO,OAAP;EACD,CAHD,MAGO;IACL;IACA,IAAII,cAAc,GAAGC,QAAQ,CAACJ,WAAW,GAAG,IAAf,CAA7B;IACA,IAAIK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,IAAI,KAAK,EAAL,GAAU,EAAd,CAAzB,CAAV;IACA,IAAIK,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACJ,cAAc,GAAGE,GAAG,GAAG,EAAN,GAAW,EAAX,GAAgB,EAAlC,IAAwC,IAAnD,CAAX;IACA,IAAII,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACJ,cAAc,GAAGE,GAAG,GAAG,EAAN,GAAW,EAAX,GAAgB,EAAjC,GAAsCG,IAAI,GAAG,IAA9C,IAAsD,EAAjE,CAAb;IACA,IAAIE,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAYJ,cAAc,GAAG,IAAlB,GAA0B,EAArC,EAAyC,EAAzC,CAAb;IACAJ,KAAK,GAAGY,UAAU,CAAClB,YAAY,EAAb,EAAiB,IAAjB,CAAlB;IACA,OAAQ,QAAOY,GAAI,KAAIG,IAAK,IAAGC,MAAO,IAAGC,MAAO,EAAhD;EACD;AACF,CApBD;;AAsBA,eAAe;EAAE9B,WAAF;EAAeM,YAAf;EAA6BG,mBAA7B;EAAkDI;AAAlD,CAAf"},"metadata":{},"sourceType":"module"}